install.packages("knitr")
source("~/r.startup.R")
install.packages(c("plotrix", "pls", "Hmisc", "lmodel2", "ggplot2"))
source("~/r.startup.R")
x <- read.delim("~/research/data/ms/muri-ii/S1-S6-tmt10_a1b6//combined/txt/proteinGroups.txt")
nrow(x)
x[1:10,]
xs <- subset(x, substring(Protein.IDs,1,3)=='sp|')
nrow(xs)
xs[1:10,]
rflds <- p.0('Reporter.intensity',0:9)
xs <- subset(x, substring(Protein.IDs,1,3)=='sp|' & Number.of.proteins==1)
nrow(xs)
xs[1:10,c('Protein.IDs',rflds)
]
multidens(xs[,rflds], log=T)
rcormat(xs[,rflds])
library(Hmisc)
rcormat(xs[,rflds])
multidens(xs[,rflds][,c(1,3,4)])
multidens(xs[,rflds][,c(1,3,4)], log=T)
multidens(xs[,rflds][,c(1,3,4)], log=T, legend.at=c(10,1))
y <- xs; y$spr <- y$Reporter.intensity.3/y$Reporter.intensity.4
ys <- subset(y, Reporter.intensity.4>0)
nrow(ys)
ys[order(ys$spr),c('Protein.IDs',rflds)][1:50,]
ys[order(ys$spr, decreasing=T),c('Protein.IDs',rflds)][1:50,]
y <- xs; y$spr <- y$Reporter.intensity.2/y$Reporter.intensity.3
ys[order(ys$spr),c('Protein.IDs',rflds)][1:50,]
ys[order(ys$spr,decreasing=T),c('Protein.IDs',rflds)][1:50,]
source("~/r.startup.R")
install.packages(c("ggplot2", "Hmisc", "pls", "lmodel2", "plotrix"))
install.packages(c("reshape2"))
install.packages(c("reshape2",'plyr','knitr','rmarkdown'))
library(ggplot2)
source("~/r.startup.R")
setwd("~/research/ecoli-starving/src")
render("figures.Rmd")
library(rmarkdown)
library(knitr)
library(rmarkdown)
render("figures.Rmd")
r.sl()
render("figures.Rmd")
render("figures.Rmd")
x$desc <- sapply(x$Fasta.headers, extract.description)
x$Fasta.headers[1:10]
x$desc <- sapply(as.character(x$Fasta.headers), extract.description)
x$desc[1:10]
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
plot(1:10, pch=16, col="gray90")
plot(1:10, pch=16, col="gray10")
plot(1:10, pch=16, col="gray20")
plot(1:10, pch=16, col="gray40")
render("figures.Rmd")
plot.intensity(pdat, 'day0.psup', 'day1.psup')
plot.intensity(pdat, 'day0.psup', 'day1.psup', 'Day 0', 'Day 1')
ggplot(pdat, aes(x=day0.psup.raw, y=day1.psup.raw)) + geom_point()
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
render("figures.Rmd")
d <- melt(pdat[,c('gene',reg.f)])
reg.flds <- c('day0.0.reg','day1.0.reg','day10.0.reg','day10.1.reg')
d <- melt(pdat[,c('gene',reg.flds)], id='gene')
d[1:10,]
qplot(pdat, aes(x=day0.psup, y=day1.psup))
qplot(pdat, aes(x=day0.psup, y=day1.psup)) + geom_points
qplot(pdat, aes(x=day0.psup, y=day1.psup)) + geom_points()
qplot(pdat, aes(x=day0.psup, y=day1.psup)) + geom_point()
names(pdat)
qplot(pdat, aes(x=day0.psup, y=day1.psup)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1)
qplot(pdat, aes(x=day0.psup, y=day1.psup), xlim=c(0,1), ylim=c(0,1)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1)
qplot(pdat, aes(day0.psup, day1.psup), xlim=c(0,1), ylim=c(0,1)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1)
?qplot
ggplot(pdat, aes(day0.psup, day1.psup), xlim=c(0,1), ylim=c(0,1)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1)
?ggplot
ggplot(pdat, aes(day0.psup, day1.psup)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1) + scale_x_continuous(limits=c(0,1)) + scale_y_continuous(limits=c(0,1))
ggplot(pdat, aes(day0.psup, day1.psup)) + geom_point(color="black") + coord_fixed() + theme(aspect.ratio=1) + xlim(0,1) + ylim(0,1)
render("figures.Rmd")
m <- plot.p(pdat, 'day0.psup', 'day10.psup', 'pSup, day 0', 'pSup, day 10')
m
render("figures.Rmd")
plot.p(pdat, 'day0.psup', 'day10.psup', 'pSup, day 0', 'pSup, day 10')
source("rescale-psup.R")
source("rescale-psup.R")
plot.p(pdat, 'day0.psup', 'day10.psup', 'pSup, day 0', 'pSup, day 10')
plot.p(pdat, 'day0.psup', 'day1.psup', 'pSup, day 0', 'pSup, day 10')
plot.p(pdat, 'day0.psup', 'day1.psup.raw', 'pSup, day 0', 'pSup, day 10')
plot.p(pdat, 'day0.psup.raw', 'day1.psup.raw', 'pSup, day 0', 'pSup, day 10')
source("rescale-psup.R")
render("figures.Rmd")
render("figures.Rmd")
names(x.md)
render("figures.Rmd")
names(x.md)
names(xs.dm)
names(x.dm)
plot(xs$day1.T, xs.dm[z.dm,]$day1.T)
lplot(xs$day1.T, xs.dm[z.dm,]$day1.T)
lplot(xs$day1.T, xs.dm[z.dm,]$day1.S)
lplot(xs$day1.T, xs.dm[z.dm,]$day1.P)
lplot(xs$day1.P, xs.dm[z.dm,]$day1.P)
plot(xs$day1.P, xs.dm[z.dm,]$day1.P)
cortest(xs$day1.P, xs.dm[z.dm,]$day1.P)
cortest(xs$day1.P, xs.dm[z.dm,]$day1.P, meth='p')
cortest(xs$day1.psup, xs.dm[z.dm,]$day1.psup, meth='p')
cortest(xs$day1.psup, xs.dm[z.dm,]$day1.psup, meth='s')
cortest(xs$day1.psup, xs.dm[z.dm,]$day1.psup, log=T, meth='p')
cortest(xs$day1.P, xs.dm[z.dm,]$day1.P, meth='p')
cortest(xs$day1.P, xs.dm[z.dm,]$day1.P, log=T, meth='p')
cortest(xs$day1.P, xs.dm[z.dm,]$day1.P, log=T, meth='s')
25+30+169+2.50
1158/1025
m <- qplot(xs$Peptides, xs.dm[z.dm,]$Peptides)
m <- qplot(xs$Peptides, xs.dm[z.dm,]$Peptides) + geom_point()
m
m <- qplot(xs$Peptides, xs.dm[z.dm,]$Peptides) + geom_point() + geom_abline()
m <- qplot(xs$Peptides, xs.dm[z.dm,]$Peptides) + geom_point() + geom_abline(); m
pdat[order(pdat$day1.0.reg, decreasing=T),c('org','gene','desc','day1.psup','day1.0.reg')][1:50,]
pdat[order(pdat$day1.0.reg, decreasing=T),c('orf','gene','desc','day1.psup','day1.0.reg')][1:50,]
pdat[order(pdat$day1.0.reg, decreasing=F),c('orf','gene','desc','day1.psup','day1.0.reg')][1:50,]
d <- data.frame(pdat[,c('gene','desc')], psup.delta.1=pdat$day1.psup-pdat$day0.psup, psup.delta.10=pdat$day10.psup-pdat$day1.psup)
d[order(d$psup.delta.10, decreasing=T), c('orf','gene','day0.psup','psup.delta.10')][1:50,]
names(d)
d[order(d$psup.delta.10, decreasing=T), c('gene','desc','psup.delta.10')][1:50,]
d[order(d$psup.delta.10, decreasing=F), c('gene','desc','psup.delta.10')][1:50,]
multidens(list(d$psup.delta.10, subset(d, substring(gene,1,2)=='rp')$psup.delta.10))
multidens(list(d$psup.delta.10, subset(d, substring(gene,1,3)=='rpl')$psup.delta.10, subset(d, substring(gene,1,3)=='rps')$psup.delta.10))
multidens(list(d$psup.delta.10, subset(d, substring(gene,1,3)=='rpl')$psup.delta.10, subset(d, substring(gene,1,3)=='rps')$psup.delta.10), lwd=2)
pdat[order(pdat$day10.1.reg, decreasing=T), flds]
flds <- c('orf','gene',reg.flds)
pdat[order(pdat$day10.1.reg, decreasing=T), flds]
pdat[order(pdat$day10.1.reg, decreasing=T), flds][1:20,]
flds <- c('orf','gene','desc',reg.flds)
pdat[order(pdat$day10.1.reg, decreasing=T), flds][1:20,]
flds <- c('orf','gene','npep','desc',reg.flds)
pdat[order(pdat$day10.1.reg, decreasing=T), flds][1:20,]
render("figures.Rmd")
flds <- c('orf','gene','npep','desc',reg.flds)
pdat[order(pdat$day10.1.reg, decreasing=T), flds][1:20,]
d <- list(a=rnorm(100,mean=2), b=rnorm(300,mean=1, sd=1.5))
ggplot(d) + geom_violin(aes(a, b))
d <- data.frame(a=rnorm(100,mean=2), b=rnorm(300,mean=1, sd=1.5))
ggplot(d) + geom_violin(aes(a, b))
ggplot(melt(d)) + geom_violin(aes(a, b))
d
multidens(d)
ggplot(melt(d, id=NULL)) + geom_violin(aes(a, b))
ggplot(melt(d, id=NULL)) + geom_violin(aes(x=variable))
ggplot(melt(d, id=NULL)) + geom_violin(aes(x=variable, y=value))
ggplot(melt(d, id=NULL),aes(x=variable, y=value)) + geom_violin() + geom_errorbar(stat='mean')
ggplot(melt(d, id=NULL),aes(x=variable, y=value)) + geom_violin() + geom_errorbar(stat=mean)
ggplot(melt(d, id=NULL),aes(x=variable, y=value)) + geom_violin() + geom_errorbar()
4.5*60*10
nrow(yres)
yres <- r.ev()
subset(yres$est, gene %in% c('MES1','ARC1','GUS1'))
x <- read.table("~/research/sg-agg/data/aminoacylation/aminoacylation-20140425.txt", header=T)
x
ggplot2(x, aes(x=min)) + geom_point()
library(ggplot2)
ggplot2(x, aes(x=min)) + geom_point()
ggplot(x, aes(x=min)) + geom_point()
ggplot(x, aes(x=min)) + geom_point(aes(x=min, y=AME))
ggplot(x, aes(x=min), xlim=c(0,12)) + geom_point(aes(x=min, y=AME))
m <- melt(x, id=min)
m <- melt(x, id='min')
m
ggplot(m, aes(x=min, cond=value)) + geom_point()
?aes
?ggplot
ggplot(m, aes(x=min, y=value, color=variable)) + geom_point()
ggplot(m, aes(x=min, y=value, color=variable)) + geom_line()
ggplot(m, aes(x=min, y=value, color=variable)) + geom_point()
ggplot(m, aes(x=min, y=value, color=variable)) + geom_line()
ggplot(m, aes(x=min, y=value, color=variable), ylim=c(10000,17000)) + geom_line()
ggplot(m, aes(x=min, y=value, color=variable), ylim=c(10000,170000)) + geom_line()
ggplot(m, aes(x=min, y=value, color=variable)) + geom_line() + ylim(10000,170000)
85e6/125
3500/(10*40)
3500/(10*30)
3500/(10*35)
32500/(10*35)
3250/(10*35)
10*40*9.25
10*35*9.25
devtools::install_github("wilkelab/cowplot")
install.packages(devtools)
library(devtools)
?install_github
??install_github
install.packages("cowplot")
library(cowplot)
install.packages("cowplot", repos="http://cran.r-project.org/")
setwd("c:/Dropbox (Personal)/")
source("gfp-beads.R")
source("gfp-beads.R")
xc
source("gfp-beads.R")
source("gfp-beads.R")
?geom_line
source("gfp-beads.R")
source("gfp-beads.R")
yt <- subset(xc, channel='T')
ys <- subset(xc, channel='S')
yt
ys
yt <- subset(xc, channel=='T')
ys <- subset(xc, channel=='S')
ht
yt
nrow(yt)
nrow(ys)
data.frame(yt$GFP.C, int.T=yt$intensity, int.S=ys$intensity)
source("gfp-beads.R")
source("gfp-beads.R")
d
source("gfp-beads.R")
d
qplot(d$input, d$gfp.T)
qplot(d$input, d$gfpc.T)
source("gfp-beads.R")
d
gplot(melt(d[,c('input','gfpc.Sfrac','gfp.Sfrac')],id=input), aes(x=input, y=value, col=variable)) + geom_lines()
ggplot(melt(d[,c('input','gfpc.Sfrac','gfp.Sfrac')],id=input), aes(x=input, y=value, col=variable)) + geom_line()
source("gfp-beads.R")
source("gfp-beads.R")
y
d
source("gfp-beads.R")
d
print(m)
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
?geom_abline
?geom_hline
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
source("gfp-beads.R")
scale_x_log10nice()
source("gfp-beads.R")
xc <- read.table("gfpc-quant.txt", header=T)
xc
qplot(xc$input, xc$mean/xc$area)
source("gfp-beads.R")
yct
bgc <- xc[1,]
bgc
bgc$mean/bgc$area
source("gfp-beads.R")
yct
yct
source("gfp-beads.R")
yt$mean/yt$area-bg.q
yt
source("gfp-beads.R")
xc
x
yct <- subset(xc, channel=='T' & input<=30 & input>0)
ycs <- subset(xc, channel=='S' & input<=30 & input>0)
yt <- subset(x, channel=='T' & input<=30 & input>0)
ys <- subset(x, channel=='S' & input<=30 & input>0)
nrow(yct)
nrow(ycs)
nrow(ys)
nrow(yt)
bgc <- xc[1,]
bgc.q <- bgc$mean
bbgc.q
bgc.q
source("gfp-beads.R")
d
source("gfp-beads.R")
1/30
11/1500
x <- read.delim("~/research/data/scerevisiae/gasch00-environmental-response.txt")
nrow(x)
x[1:10,]
pmg
nrow(yres)
yres <- r.ev()
source("~/research/sg-agg/src/load-ms-data.R")
pmg(c('CEG1','PAB1'))
pmg(c('HSP104','SSA1'))
source("~/research/gelscore/src/figures.R")
source("~/research/gelscore/src/figures.R")
source("~/research/gelscore/src/figures.R")
source("~/research/gelscore/src/figures.R")
source("~/research/gelscore/src/figures.R")
